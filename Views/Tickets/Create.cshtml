@model ITSupportTickets.Models.Ticket

@{
    ViewData["Title"] = "Create";
}

<h1>Create Ticket</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProjectName" class="control-label">Project Name</label>
                <input asp-for="ProjectName" class="form-control" required />
                <span asp-validation-for="ProjectName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DepartmentName" class="control-label">Department Name</label>
                <select asp-for="DepartmentName" id="departmentList" class="form-control" required></select>
                <span asp-validation-for="DepartmentName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="RequestedBy" class="control-label">Requested By</label>
                <!--- <input asp-for="RequestedBy" class="form-control" /> -->

                <select asp-for="RequestedBy" id="employeeList" class="form-control" required></select>

                <span asp-validation-for="RequestedBy" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" required>

                </textarea>
                <!-- <input asp-for="Description" class="form-control" required /> -->
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" required />
            </div>
        </form>
    </div>
</div>

<script>
    var departmentData;
    function loadDepartments(data) {
        departmentData = data;
        var departmentsListArr = new Array();
        for (var item in data.departments) {
            departmentsListArr.push(data.departments[item].department);
        }

        departmentsListArr = new Set(departmentsListArr);

        departmentsListArr.forEach(function (item, index) {
            $("#departmentList").append(`<option value="${item}">${item}</option>`);
        });

        getEmployees($("#departmentList").val());
    }

    function getEmployees(department) {
        let employeeListIndexArr = new Array();
        for (var index in departmentData.departments) {
            if (departmentData.departments[index].department == department)
                employeeListIndexArr.push(index);
        }

        

        employeeListIndexArr.forEach(function (item, index) {
            $("#employeeList").append(`<option value="${departmentData.departments[item].firstname} ${departmentData.departments[item].lastname}">${departmentData.departments[item].firstname} ${departmentData.departments[item].lastname}</option>`);
            
        });
    }

    $("#departmentList").on("change", function () {
        $("#employeeList").html("");
        getEmployees($("#departmentList").val());
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
